galaxy_info:
  author: your name
  description: your description
  company: your company (optional)

  # If the issue tracker for your role is not on github, uncomment the
  # next line and provide a value
  # issue_tracker_url: http://example.com/issue/tracker

  # Some suggested licenses:
  # - BSD (default)
  # - MIT
  # - GPLv2
  # - GPLv3
  # - Apache
  # - CC-BY
  license: license (GPLv2, CC-BY, etc)

  min_ansible_version: 1.2

  # If this a Container Enabled role, provide the minimum Ansible Container version.
  # min_ansible_container_version:

  # Optionally specify the branch Galaxy will use when accessing the GitHub
  # repo for this role. During role install, if no tags are available,
  # Galaxy will use this branch. During import Galaxy will access files on
  # this branch. If Travis integration is configured, only notifications for this
  # branch will be accepted. Otherwise, in all cases, the repo's default branch
  # (usually master) will be used.
  #github_branch:

  #
  # platforms is a list of platforms, and each platform has a name and a list of versions.
  #
  # platforms:
  # - name: Fedora
  #   versions:
  #   - all
  #   - 25
  # - name: SomePlatform
  #   versions:
  #   - all
  #   - 1.0
  #   - 7
  #   - 99.99

  galaxy_tags: []
    # List tags for your role here, one per line. A tag is a keyword that describes
    # and categorizes the role. Users find roles by searching for tags. Be sure to
    # remove the '[]' above, if you add tags to this list.
    #
    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.
    #       Maximum 20 tags per role.

dependencies:
  # List your role dependencies here, one per line. Be sure to remove the '[]' above,
  # if you add dependencies to this list.
  - role: 'ansible-role-linux-redis'
    vars:
      redis_path: '{{ jumpserver_redis_path }}'
      redis_requirepass: '{{ jumpserver_redis_requirepass }}'
      redis_maxmemory: '{{ jumpserver_redis_maxmemory }}'
      redis_port: '{{ jumpserver_redis_port }}'
    when: jumpserver_redis_dept
  - role: 'ansible-role-linux-tomcat'
    vars:
      tomcat_port_http: '{{ jumpserver_tomcat_port_http }}'
      tomcat_path: '{{ jumpserver_tomcat_path }}'
      tomcat_disable_ipv6: '{{ jumpserver_tomcat_disable_ipv6 | bool | to_json }}'
      tomcat_jvm_metaspace: '{{ jumpserver_tomcat_jvm_metaspace }}'
      tomcat_jvm_xmn: '{{ jumpserver_tomcat_jvm_xmn }}'
      tomcat_jvm_xmx: '{{  jumpserver_tomcat_jvm_xmx }}'
      tomcat_custom_arg: '{{ jumpserver_tomcat_custom_arg }}'
    when: jumpserver_tomcat_dept
  - role: 'ansible-role-linux-mysql'
    vars:
      mysql_releases: 'Community'
      mysql_sa_pass: '{{ jumpserver_mysql_sa_pass }}'
      mysql_system_type: 'small'
      mysql_version: '57'
      mysql_path: '{{ jumpserver_mysql_path }}'
      mysql_port_mysqld: '{{ jumpserver_mysql_port_mysqld }}'
      mysql_mailto: '{{ jumpserver_mysql_mailto }}'
      mysql_backupset_arg: '{{ jumpserver_mysql_backupset_arg }}'
      mysql_bu_dbs_arg: '{{ jumpserver_mysql_bu_dbs_arg }}'
    when: jumpserver_mysql_dept
  - role: 'ansible-role-linux-nginx'
    vars:
      ngx_block_agents: '{{ jumpserver_ngx_block_agents }}'
      ngx_block_string: '{{ jumpserver_ngx_block_string }}'
      ngx_compress: '{{ jumpserver_ngx_compress }}'
      ngx_domain: '{{ jumpserver_ngx_domain }}'
      ngx_port_http: '{{ jumpserver_ngx_port_http }}'
      ngx_port_https: '{{ jumpserver_ngx_port_https }}'
      ngx_ssl_protocols: '{{ jumpserver_ngx_ssl_protocols }}'
      ngx_version: '{{ jumpserver_ngx_version }}'
      ngx_site_path: '{{ jumpserver_ngx_site_path }}'
      ngx_logs_path: '{{ jumpserver_ngx_logs_path }}'
      ngx_client_max_body_size: '{{ jumpserver_ngx_client_max_body_size }}'
      ngx_proxy_read_timeout: '{{ jumpserver_ngx_proxy_read_timeout }}'
      ngx_proxy_send_timeout: '{{ jumpserver_ngx_proxy_send_timeout }}'
      ngx_allow_methods:
        - 'POST'
        - 'PUT'
        - 'GET'
        - 'HEAD'
        - 'DELETE'
        - 'PATCH'
      ngx_site:
        - domain: '{{ jumpserver_ngx_domain }}'
          syntax:
            - 'location /luna/ {'
            - '  try_files $uri / /index.html;'
            - '  alias {{ jumpserver_path }}/luna/;'
            - '}'
            - 'location /media/ {'
            - '  add_header Content-Encoding gzip;'
            - '  root {{ jumpserver_path }}/jumpserver-{{ jumpserver_version }}/data/;'
            - '}'
            - 'location /static/ {'
            - '  root {{ jumpserver_path }}/jumpserver-{{ jumpserver_version }}/data/;'
            - '}'
            - 'location /socket.io/ {'
            - '  proxy_pass http://localhost:{{ jumpserver_port_arg.coco_httpd }}/socket.io/;'
            - '  proxy_buffering off;'
            - '  proxy_http_version 1.1;'
            - '  proxy_set_header Upgrade $http_upgrade;'
            - '  proxy_set_header Connection "upgrade";'
            - '  proxy_set_header X-Real-IP $remote_addr;'
            - '  proxy_set_header Host $host;'
            - '  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;'
            - '  access_log off;'
            - '}'
            - 'location /coco/ {'
            - '  proxy_pass http://localhost:{{ jumpserver_port_arg.coco_httpd }}/coco/;'
            - '  proxy_set_header X-Real-IP $remote_addr;'
            - '  proxy_set_header Host $host;'
            - '  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;'
            - '  access_log off;'
            - '}'
            - 'location /guacamole/ {'
            - '  proxy_pass http://localhost:{{ jumpserver_tomcat_port_http }}/;'
            - '  proxy_buffering off;'
            - '  proxy_http_version 1.1;'
            - '  proxy_set_header Upgrade $http_upgrade;'
            - '  proxy_set_header Connection $http_connection;'
            - '  proxy_set_header X-Real-IP $remote_addr;'
            - '  proxy_set_header Host $host;'
            - '  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;'
            - '  access_log off;'
            - '}'
            - 'location / {'
            - '  proxy_pass http://localhost:{{ jumpserver_port_arg.server }};'
            - '  proxy_set_header X-Real-IP $remote_addr;'
            - '  proxy_set_header Host $host;'
            - '  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;'
            - '}'
    when: jumpserver_ngx_dept
